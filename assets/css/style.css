@import url('https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap');

:root {
    --primary-color: #047aed;
    --secondary-color: #1c3fa8;
    --dark-color: #002240;
    --light-color: #f4f4f4;
    --success-color: #5cb85c;
    --error-color: #d9534f;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'lato', sans-serif;
    line-height: 1.6;
}

ul {
    list-style-type: none;
}

a {
    text-decoration: none;
    color: #333;
}

h1, h2 {
    font-weight: 300;
    line-height: 1.3;
    margin: 10px 0;
}

p {
    margin: 10px 0;
}

img {
    width: 100%;
}


/* Navbar */
.navbar {
    background-color: var(--primary-color);
    color: #fff;
    height: 70px;
}

.navbar .flex {
    justify-content: space-between;
}

.navbar ul {
    display: flex;
}

.navbar a {
    color: #fff;
    padding: 10px;
    margin: 0 5px;
}

.navbar a:hover {
    border-bottom: 2px solid #fff;
}


/* Hero */
.hero {
    height: 400px;
    background-color: var(--primary-color);
    color: #fff;
    position: relative;
}

.hero h1 {
    font-size: 34px;
}

.hero .grid {
    overflow: visible;
    grid-template-columns: 55% 45%;
    gap: 30px;
}

.hero-text {
    animation: slideFromLeft 1s ease-in;
}

.hero-form {
    position: relative;
    top: 60px;
    height: 350px;
    width: 400px;
    padding: 40px;
    z-index: 100;
    justify-self: flex-end;
    animation: slideFromRight 1s ease-in;
}

.hero-form .hidden {
    visibility: hidden;
    height: 0;
}

.hero-form .form-control {
    margin: 35px 0;
}

.hero-form input[type='text'],
.hero-form input[type='email'] {
    border: none;
    border-bottom: 1px solid #b4becb;
    width: 100%;
    padding: 5px;
    font-size: 14px;
}

.hero-form input:focus {
    outline: none;
}

.hero::before,
.hero::after {
    content: '';
    position: absolute;
    height: 200px;
    bottom: -100px;
    right: 0;
    left: 0;
    background-color: #fff;
    transform: skewY(-5deg);
    -webkit-transform: skewY(-5deg);
    -moz-transform: skewY(-5deg);
    -ms-transform: skewY(-5deg);
}


/* Stats */
.stats {
    padding-top: 150px;
    animation: slideFromBottom 1s ease-in;
}

.stats .stats-heading {
    max-width: 500px;
    margin: auto;
}

.stats .grid h3 {
    font-size: 34px;
}

.stats .grid p {
    font-size: 20px;
    font-weight: bold;
}

/* Cli */
.cli .grid {
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
}

.cli .grid > *:first-child {
    grid-column: span 2;
    grid-row: span 2;
}


/* Cloud */
.cloud .grid {
    grid-template-columns: 4fr 3fr;
}


/* Languages */
.languages .flex {
    flex-wrap: wrap;
}

.languages .card {
    text-align: center;
    margin: 18px 10px 40px;
    transition: transform 0.2s ease-in;
}

.languages .card:hover {
    transform: translateY(-15px);
}

.languages .card h4 {
    font-size: 20px;
    margin-bottom: 10px;
}

/* Features Head */
.features-head img {
    width: 200px;
    justify-self: flex-end;
}

/* Features Sub-head */
.features-sub-head img {
    width: 300px;
    justify-self: flex-end;
}


/* Features Main */
.features-main .grid {
    padding: 20px;
}

.features-main .grid > *:first-child {
    grid-column: 1 / -1;
    grid-row: 1;
}

.features-main .grid > *:nth-child(2) {
    grid-column: span 2;
    grid-row: 2;
}

.features-main .card i {
    margin-right: 20px ;
}


/* Docs head*/
.docs-head .grid img {
    width: 200px;
    justify-self: flex-end;
}

/* Docs main */
.docs-main .grid {
    grid-template-columns: 1fr 2fr;
    align-items: flex-start;
}

.docs-main nav li {
    font-size: 16px;
    padding-bottom: 5px;
    margin-bottom: 5px;
    border-bottom: 1px solid #ccc;
}

.docs-main a:hover {
    font-weight: bold;
}


/* Footer */
.footer .flex a {
    margin: 0 10px;
}

/* Animations */
@keyframes slideFromTop {
    0% {
        transform: translateY(-100%);
    }

    100% {
        transform: translateY(0);
    }
}

@keyframes slideFromBottom {
    0% {
        transform: translateY(100%);
    }

    100% {
        transform: translateY(0);
    }
}

@keyframes slideFromRight {
    0% {
        transform: translateX(100%);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes slideFromLeft {
    0% {
        transform: translateX(-100%);
    }

    100% {
        transform: translateX(0);
    }
}